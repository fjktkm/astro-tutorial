---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

import type { MarkdownInstance } from "astro";

type Frontmatter = {
    title: string;
    tags: string[];
};

type Post = MarkdownInstance<Frontmatter>;

type StaticPath = {
    params: { tag: string };
    props: { posts: Post[] };
};

export async function getStaticPaths(): Promise<StaticPath[]> {
    const allPosts: Post[] = await Astro.glob<Frontmatter>("../posts/*.md");

    const uniqueTags: string[] = [
        ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.frontmatter.tags.includes(tag),
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
    <p>{tag}のタグが付いた記事</p>
    <ul>
        {
            posts.map((post) => (
                <BlogPost url={post.url} title={post.frontmatter.title} />
            ))
        }
    </ul>
</BaseLayout>
